// i18n/dict.ts
export const ar = {
  // existing keys here
  uploadCover: "ارفع غلاف الشركة",
  uploadLogo: "ارفع شعار الشركة",
  uploadImage: "ارفع صورة الشركة",
  // rest of code here
}

export const en = {
  // existing keys here
  uploadCover: "Upload Company Cover",
  uploadLogo: "Upload Company Logo",
  uploadImage: "Upload Company Image",
  // rest of code here
}

// app/actions.ts
export async function addAdAction(formData) {
  const image = String(formData.get("image") || "/placeholder.svg?height=400&width=600");
  let logo = String(formData.get("logo") || "");
  if (!logo) {
    logo = image;
  }

  const ad = {
    // existing fields here
    image,
    logo,
    // rest of code here
  };

  // rest of code here
}

// app/globals.css
:root {
  --primary: 222 47% 11%; /* nearly black for a clean minimal look */
  --primary-foreground: 210 40% 98%;
  --secondary: 210 14% 96%; /* subtle gray for secondary surfaces */
  --secondary-foreground: 222.2 47.4% 11.2%;
  // rest of code here
}

html.light body {
  background-image: none;
}

html.dark body {
  background: linear-gradient(180deg, var(--background) 0%, var(--foreground) 100%);
}

// components/coupon-input.tsx
"use client"

import { useEffect, useState, useTransition } from "react"
import { Input } from "@/components/ui/input"
import { Button } from "@/components/ui/button"
import { useI18n } from "@/providers/lang-provider"

export function CouponInput({
  plan = "vip",
  onFinalPrice,
  onCodeChange,
}: {
  plan?: "vip" | "standard"
  onFinalPrice?: (price: number) => void
  onCodeChange?: (code: string) => void
}) {
  const { t } = useI18n()
  const [code, setCode] = useState("")
  const [price, setPrice] = useState<number | null>(null)
  const [isPending, startTransition] = useTransition()

  useEffect(() => {
    startTransition(async () => {
      const res = await fetch(`/api/price?plan=${plan}&code=`).then((r) => r.json())
      if (res.ok) {
        setPrice(res.amount)
        onFinalPrice?.(res.amount)
      }
    })
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [plan])

  const apply = () => {
    startTransition(async () => {
      const res = await fetch(`/api/price?plan=${plan}&code=${encodeURIComponent(code)}`).then((r) => r.json())
      if (res.ok) {
        setPrice(res.amount)
        onFinalPrice?.(res.amount)
      }
    })
  }

  return (
    <div className="space-y-3">
      <div className="flex gap-2">
        <Input
          value={code}
          onChange={(e) => {
            setCode(e.target.value)
            onCodeChange?.(e.target.value)
          }}
          placeholder={t("coupon")}
        />
        <Button onClick={apply} disabled={isPending}>
          {t("apply")}
        </Button>
      </div>
      {price !== null && (
        <div className="text-sm">
          {t("finalPrice")}: <span className="font-semibold">${price}</span>
        </div>
      )}
    </div>
  )
}

// app/layout.tsx
import ProvidersClient from "./providers-client";
import { Inter } from 'next/font/google'
const inter = Inter({ subsets: ['latin'] })

export default function RootLayout({ children }) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body className={inter.className}>
        <ProvidersClient>{children}</ProvidersClient>
      </body>
    </html>
  )
}

// components/categories-grid.tsx
"use client"

// Your existing code here

// components/footer.tsx
"use client"

// Your existing code here
